<html>
<head>
  <link rel = "stylesheet" href="/style.css" type =text/css />
  <script src="/app.js"></script>
</head>

<body>
  <div class = "center">

    <section>
      <article>
        <h2> Getting Git </h2>
        <img id= "postpic" src="/macbook_air_wood_desk.jpg" alt = "Holly Leary image" height = "35%" />

        <div class = "posttext">
            Since day one, git has been (for me) nebulous at best. I can't help but feel that I'm missing the bigger
            picture, because I can't see it. Where is this 'git'? Where exactly are all of the overwritten versions of my cuss-ridden
            commits? There's something about working from the terminal that feels too abstract, too confusing. I need
            something more tangible.
            <p>
            This is why I created a simple step-by-step set of instructions for myself that I use every day. I may
            not understand them fully, but they're concrete, and they work for me. Maybe they can work for somebody
            else too.
            <p>
            But first, two things:
            <p>
            Git and GitHub are not the same thing, though they may do similar things. Do not confuse the two. When you
            initialize git from the terminal, you are not initializing anything on GitHub. You can commit to git, and you
            can commit to GitHub, but commiting to one is not commiting to both. Remember that.
            <p>
            Got it? Good. Let's proceed.
            <p>
            Say you want to create a Ruby file, write some code inside it, and then have the ability to keep track of any
            changes that you make as time goes on. We'll also assume that you want to push your code to GitHub so that you
            can share files and have a backup of your work. Let's start from the beginning:
            <p>
            Open your terminal and cd into the directory you'd like to work from and type the following into the prompt: </li>
            <p>

            <div class = code>
              > mkdir your_directory_name
              <br>
              > cd your_directory_name
              <br>
              > atom your_file_name.rb
              <br>
              > git init
              <br>
              > touch your_directory_name
              <br>
              > git add your_file_name.rb
              <br>
              > git commit -m "some comment"
              <br>
            </div>

            <p>
            Excellent. You've just created a git repository on your computer, to which you've saved a Ruby file.
            <p>
            Once you've made some progress on your ruby program, you should commit your changes to git. Once again, from the terminal,
            cd into your root directory. Then, enter the following:
            <p>

            <div class = code>
              > git add your_file_name.rb
              <br>
              > git commit -m "some comment"
              <br>
              </div>
            <p>

            Awesome. You're doing great. So great, in fact, that you want to try out a GitHub repository. Let's go to GitHub.
            Go to your account on their website. From there,

            <li> Click on the "+" icon in the top right and select "New repository".</li>
            <li> Give the repository a name in the space provided, and select the "Create repository" button at the bottom. </li>
            <li> Copy the SSH url provided. </li>
            <li> Now, go back to your terminal.</li>

            <p>
            In the terminal, enter the following:
            <p>

            <div class = code>
              > git remote add origin paste_in_the_SSH-url_here
              <br>
              > git remote -v
              <br>
              > git push origin master
              <br>
            </div>
            <p>

            So far, so good. Now all you have to do is push your code to GitHub. Back to the terminal:
            <p>

            <div class = code>
              > git add .
              <br>
              > git commit -m "some comment"
              <br>
              > git push origin master
            </div>

            <p>
            Congratulations! You've successfully pushed your code to the interwebs. If you go back to your
            repositories (along with your history of commits) on GitHub, you should be able to see your code there.
            <p>
            It's okay if you don't yet fully understand what's going on. I know I don't. But with regular commits, you'll soon memorize and then start to understand what's actually going on. In the meantime,
            commit early, and commit often!

            <div class = "postdate">
             <p>
               9.28.14
             </p>
           </div>

          </div>
        </article>
      </section>
    </div>
  </body>
</html>
